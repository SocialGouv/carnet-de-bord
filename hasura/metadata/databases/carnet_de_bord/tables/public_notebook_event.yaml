table:
  name: notebook_event
  schema: public
configuration:
  custom_column_names:
    creation_date: creationDate
    event_date: eventDate
    event_type: eventType
    notebook_id: notebookId
    professional_id: professionalId
  custom_root_fields: {}
object_relationships:
- name: notebook
  using:
    foreign_key_constraint_on: notebook_id
- name: professional
  using:
    foreign_key_constraint_on: professional_id
insert_permissions:
- permission:
    backend_only: false
    check: {}
    columns:
    - creation_date
    - event
    - event_date
    - event_type
    - id
    - notebook_id
    - professional_id
  role: admin_cdb
- permission:
    backend_only: false
    check:
      notebook:
        members:
          professional_id:
            _eq: X-Hasura-Professional-Id
    columns:
    - creation_date
    - event
    - event_date
    - event_type
    - id
    - notebook_id
    - professional_id
    set:
      professional_id: x-hasura-Professional-Id
  role: professional
select_permissions:
- permission:
    allow_aggregations: true
    columns:
    - creation_date
    - event
    - event_date
    - event_type
    - id
    - notebook_id
    - professional_id
    filter: {}
  role: admin_cdb
- permission:
    allow_aggregations: true
    columns:
    - creation_date
    - event
    - event_date
    - event_type
    - id
    - notebook_id
    - professional_id
    filter:
      notebook:
        members:
          professional_id:
            _eq: X-Hasura-Professional-Id
  role: professional
update_permissions:
- permission:
    check: {}
    columns:
    - creation_date
    - event
    - event_date
    - event_type
    - id
    - notebook_id
    - professional_id
    filter: {}
  role: admin_cdb
- permission:
    check: null
    columns: []
    filter:
      professional_id:
        _eq: X-Hasura-Professional-Id
  role: professional
