name: Review

on:
  push:
    branches-ignore:
      - 'master'
    tags-ignore:
      - v*

concurrency:
  cancel-in-progress: true
  group: review-${{ github.ref }}

jobs:
  ##############################################################################
  ## BUILD AND REGISTER BACKEND IMAGE
  ##############################################################################
  register-backend:
    name: Build & Register backend
    runs-on: ubuntu-latest
    steps:
      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          dockerfile: backend/Dockerfile
          dockercontext: backend
          imageName: carnet-de-bord/backend
          token: ${{ secrets.GITHUB_TOKEN }}

  ##############################################################################
  ## BUILD AND REGISTER APP IMAGE
  ##############################################################################
  register-app:
    name: Build & Register application
    runs-on: ubuntu-latest
    steps:
      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          imageName: carnet-de-bord/app
          token: ${{ secrets.GITHUB_TOKEN }}
          dockerbuildargs: |
            VITE_CRISP_WEBSITE_ID=2f9fd96d-44a0-4588-8f7e-a06a5a531c6f
            VITE_MATOMO_SITE_ID=53
            VITE_MATOMO_URL=https://matomo.fabrique.social.gouv.fr

  ##############################################################################
  ## BUILD AND REGISTER HASURA IMAGE
  ##############################################################################
  register-hasura:
    name: Build & Register Hasura
    runs-on: ubuntu-latest
    steps:
      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          dockerfile: hasura/Dockerfile
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: carnet-de-bord/hasura

  ##############################################################################
  ## DEPLOY BACKEND & FRONT-END
  ##############################################################################
  deploy:
    name: Deploy review branch
    runs-on: ubuntu-latest
    needs: [register-app, register-hasura, register-backend]
    steps:
      - name: Use kube-workflow deployment
        uses: SocialGouv/kube-workflow@v1
        with:
          environment: dev
          token: ${{ secrets.GITHUB_TOKEN }}
          kubeconfig: ${{ secrets.KUBECONFIG }}
          rancherProjectId: ${{ secrets.RANCHER_PROJECT_ID }}
          rancherProjectName: ${{ secrets.RANCHER_PROJECT_NAME }}

  ##############################################################################
  ## End To End Tests running on all branches
  ##############################################################################
  pytest:
    name: run pytest tests
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.13

      - name: Install dependencies
        working-directory: ./backend
        run: poetry install
      - name: Run pytest
        working-directory: ./backend
        run: poetry run pytest

  e2e:
    name: run CodeceptJS tests
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Yarn cache setup
        uses: c-hive/gha-yarn-cache@v2
      - name: Install dependencies
        run: |
          yarn --cwd e2e install --prefer-offline --frozen-lockfile
      - name: Download k8s manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests-dev.yaml
      - name: Get deployment url
        uses: mikefarah/yq@v4.25.1
        id: app
        with:
          cmd: echo $(cat manifests.yaml | yq e '.spec.rules[]?.host' - | head -n 3 | tail -n 1)
      - name: Get hasura url
        uses: mikefarah/yq@v4.25.1
        id: hasura
        with:
          cmd: echo $(cat manifests.yaml | yq e '.spec.rules[]?.host' - | tail -n 1 )
      - name: Run test e2e
        run: |
          HASURA_ADMIN_SECRET=${{ secrets.HASURA_ADMIN_SECRET }} HASURA_BASEURL=https://${{ steps.hasura.outputs.result }}/v1/graphql CODECEPT_BASEURL=https://${{ steps.app.outputs.result }} yarn --cwd e2e test
      - name: Copy artifact
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshot
          path: e2e/output

  ##############################################################################
  ## Fonctionnal Tests (endpoints & hasura) running on all branches
  ##############################################################################
  fonctionnal_tests:
    name: run fonctionnal tests
    runs-on: ubuntu-latest
    needs: [e2e]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Yarn cache setup
        uses: c-hive/gha-yarn-cache@v2
      - name: Install dependencies
        run: |
          yarn install --prefer-offline --frozen-lockfile
      - name: Download k8s manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests-dev.yaml
      - name: Get deployment url
        uses: mikefarah/yq@v4.25.1
        id: app
        with:
          cmd: echo $(cat manifests.yaml | yq e '.spec.rules[]?.host' - | head -n 3 | tail -n 1)
      - name: Get hasura url
        uses: mikefarah/yq@v4.25.1
        id: hasura
        with:
          cmd: echo $(cat manifests.yaml | yq e '.spec.rules[]?.host' - | tail -n 1 )
      - name: Run functionnal tests
        run: |
          HASURA_ADMIN_SECRET=${{ secrets.HASURA_ADMIN_SECRET }} HASURA_GRAPHQL_JWT_SECRET=${{ secrets.HASURA_GRAPHQL_JWT_SECRET }} VITE_GRAPHQL_API_URL=https://${{ steps.hasura.outputs.result }}/v1/graphql HASURA_GRAPHQL_ENDPOINT=https://${{ steps.hasura.outputs.result }} ACTION_SECRET=${{ secrets.ACTION_SECRET }} yarn test
